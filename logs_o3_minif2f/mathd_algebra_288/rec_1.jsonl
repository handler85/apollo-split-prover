{"name": "mathd_algebra_288_1", "split": "train", "header": "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\nset_option pp.instanceTypes true\nset_option pp.numericTypes true\nset_option pp.coercions.types true\nset_option pp.letVarTypes true\nset_option pp.structureInstanceTypes true\nset_option pp.instanceTypes true\nset_option pp.mvars.withType true\nset_option pp.coercions true\nset_option pp.funBinderTypes true\nset_option pp.piBinderTypes true\n\n", "informal_prefix": "", "formal_statement": "lemma mathd_algebra_288_1\n  (x y : ℝ)\n  (n : NNReal)\n  (h₀ : x < (0 : ℝ) ∧ y < (0 : ℝ))\n  (h₁ : |y| = (6 : ℝ))\n  (h₂ : √((x - (8 : ℝ)) ^ (2 : ℕ) + (y - (3 : ℝ)) ^ (2 : ℕ)) = (15 : ℝ))\n  (h₃ : √(x ^ (2 : ℕ) + y ^ (2 : ℕ)) = √(↑n : ℝ)) :\n  y = (-6 : ℝ) := by", "formal_proof": "\n  sorry"}
{"name": "mathd_algebra_288_2", "split": "train", "header": "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\nset_option pp.instanceTypes true\nset_option pp.numericTypes true\nset_option pp.coercions.types true\nset_option pp.letVarTypes true\nset_option pp.structureInstanceTypes true\nset_option pp.instanceTypes true\nset_option pp.mvars.withType true\nset_option pp.coercions true\nset_option pp.funBinderTypes true\nset_option pp.piBinderTypes true\n\n", "informal_prefix": "", "formal_statement": "lemma mathd_algebra_288_2\n  (x y : ℝ)\n  (n : NNReal)\n  (h₀ : x < (0 : ℝ))\n  (hy : y = (-6 : ℝ))\n  (h2_subst : √((145 : ℝ) - x * (16 : ℝ) + x ^ (2 : ℕ)) = (15 : ℝ))\n  (h₃ : √((36 : ℝ) + x ^ (2 : ℕ)) = √(↑n : ℝ)) :\n  √((145 : ℝ) - x * (16 : ℝ) + x ^ (2 : ℕ)) = (15 : ℝ) := by", "formal_proof": "\n  sorry"}
{"name": "mathd_algebra_288_3", "split": "train", "header": "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\nset_option pp.instanceTypes true\nset_option pp.numericTypes true\nset_option pp.coercions.types true\nset_option pp.letVarTypes true\nset_option pp.structureInstanceTypes true\nset_option pp.instanceTypes true\nset_option pp.mvars.withType true\nset_option pp.coercions true\nset_option pp.funBinderTypes true\nset_option pp.piBinderTypes true\n\n", "informal_prefix": "", "formal_statement": "lemma mathd_algebra_288_3\n  (x y : ℝ)\n  (n : NNReal)\n  (h₀ : x < (0 : ℝ))\n  (hy : y = (-6 : ℝ))\n  (h2_simpl h2_subst : √((145 : ℝ) - x * (16 : ℝ) + x ^ (2 : ℕ)) = (15 : ℝ))\n  (h₃ : √((36 : ℝ) + x ^ (2 : ℕ)) = √(↑n : ℝ)) :\n  (145 : ℝ) - x * (16 : ℝ) + x ^ (2 : ℕ) = (225 : ℝ) := by", "formal_proof": "\n  sorry"}
{"name": "mathd_algebra_288_4", "split": "train", "header": "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\nset_option pp.instanceTypes true\nset_option pp.numericTypes true\nset_option pp.coercions.types true\nset_option pp.letVarTypes true\nset_option pp.structureInstanceTypes true\nset_option pp.instanceTypes true\nset_option pp.mvars.withType true\nset_option pp.coercions true\nset_option pp.funBinderTypes true\nset_option pp.piBinderTypes true\n\n", "informal_prefix": "", "formal_statement": "lemma mathd_algebra_288_4\n  (x y : ℝ)\n  (n : NNReal)\n  (h₀ : x < (0 : ℝ))\n  (hy : y = (-6 : ℝ))\n  (x_sq_eq : (64 : ℝ) - x * (16 : ℝ) + x ^ (2 : ℕ) = (144 : ℝ))\n  (sq_eq h2_simpl : True)\n  (h₃ : √((36 : ℝ) + x ^ (2 : ℕ)) = √(↑n : ℝ))\n  (h₂ : True) :\n  x = (-4 : ℝ) := by", "formal_proof": "\n  sorry"}
{"name": "mathd_algebra_288_5", "split": "train", "header": "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\nset_option pp.instanceTypes true\nset_option pp.numericTypes true\nset_option pp.coercions.types true\nset_option pp.letVarTypes true\nset_option pp.structureInstanceTypes true\nset_option pp.instanceTypes true\nset_option pp.mvars.withType true\nset_option pp.coercions true\nset_option pp.funBinderTypes true\nset_option pp.piBinderTypes true\n\n", "informal_prefix": "", "formal_statement": "lemma mathd_algebra_288_5\n  (x y : ℝ)\n  (n : NNReal)\n  (hy : y = (-6 : ℝ))\n  (hx : x = (-4 : ℝ))\n  (x_sq_eq sq_eq h2_simpl : True)\n  (h₃ : √(52 : ℝ) = √(↑n : ℝ))\n  (h₂ : True) :\n  n = (52 : NNReal) := by", "formal_proof": "\n  sorry"}
