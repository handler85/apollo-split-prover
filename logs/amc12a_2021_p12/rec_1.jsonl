{"name": "amc12a_2021_p12_1", "split": "train", "header": "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\nset_option pp.instanceTypes true\nset_option pp.numericTypes true\nset_option pp.coercions.types true\nset_option pp.letVarTypes true\nset_option pp.structureInstanceTypes true\nset_option pp.instanceTypes true\nset_option pp.mvars.withType true\nset_option pp.coercions true\nset_option pp.funBinderTypes true\nset_option pp.piBinderTypes true\n", "informal_prefix": "", "formal_statement": "lemma amc12a_2021_p12_1\n  (a b c d : ℝ)\n  (f : ℂ → ℂ)\n  (h₀ :\n  ∀ (z : ℂ),\n    f z =\n      z ^ (6 : ℕ) - (10 : ℂ) * z ^ (5 : ℕ) + (↑a : ℂ) * z ^ (4 : ℕ) + (↑b : ℂ) * z ^ (3 : ℕ) + (↑c : ℂ) * z ^ (2 : ℕ) +\n          (↑d : ℂ) * z +\n        (16 : ℂ))\n  (h₁ :\n  ∀ (z : ℂ),\n    z ^ (6 : ℕ) - (10 : ℂ) * z ^ (5 : ℕ) + (↑a : ℂ) * z ^ (4 : ℕ) + (↑b : ℂ) * z ^ (3 : ℕ) + (↑c : ℂ) * z ^ (2 : ℕ) +\n            (↑d : ℂ) * z +\n          (16 : ℂ) =\n        (0 : ℂ) →\n      z.im = (0 : ℝ) ∧ (0 : ℝ) < z.re ∧ (↑⌊z.re⌋ : ℝ) = z.re) :\n  ∃ (r₁ : ℝ) (r₂ : ℝ) (r₃ : ℝ) (r₄ : ℝ) (r₅ : ℝ) (r₆ : ℝ),\n    (∀ (z : ℂ),\n        (16 : ℂ) + z * (↑d : ℂ) + z ^ (2 : ℕ) * (↑c : ℂ) + z ^ (3 : ℕ) * (↑b : ℂ) +\n              (z ^ (4 : ℕ) * (↑a : ℂ) - z ^ (5 : ℕ) * (10 : ℂ)) +\n            z ^ (6 : ℕ) =\n                                                                                      z ^ (2 : ℕ) * (↑r₁ : ℂ) *\n                                                                                            (↑r₃ : ℂ) *\n                                                                                          (↑r₄ : ℂ) *\n                                                                                        (↑r₆ : ℂ) +\n                                                                                    z ^ (2 : ℕ) * (↑r₁ : ℂ) *\n                                                                                          (↑r₃ : ℂ) *\n                                                                                        (↑r₅ : ℂ) *\n                                                                                      (↑r₆ : ℂ) +\n                                                                                  z ^ (2 : ℕ) * (↑r₁ : ℂ) * (↑r₄ : ℂ) *\n                                                                                      (↑r₅ : ℂ) *\n                                                                                    (↑r₆ : ℂ) +\n                                                                                z ^ (2 : ℕ) * (↑r₂ : ℂ) * (↑r₃ : ℂ) *\n                                                                                    (↑r₄ : ℂ) *\n                                                                                  (↑r₅ : ℂ) +\n                                                                              z ^ (2 : ℕ) * (↑r₂ : ℂ) * (↑r₃ : ℂ) *\n                                                                                  (↑r₄ : ℂ) *\n                                                                                (↑r₆ : ℂ) +\n                                                                            z ^ (2 : ℕ) * (↑r₂ : ℂ) * (↑r₃ : ℂ) *\n                                                                                (↑r₅ : ℂ) *\n                                                                              (↑r₆ : ℂ) +\n                                                                          z ^ (2 : ℕ) * (↑r₂ : ℂ) * (↑r₄ : ℂ) *\n                                                                              (↑r₅ : ℂ) *\n                                                                            (↑r₆ : ℂ) +\n                                                                        z ^ (2 : ℕ) * (↑r₃ : ℂ) * (↑r₄ : ℂ) *\n                                                                            (↑r₅ : ℂ) *\n                                                                          (↑r₆ : ℂ) +\n                                                                      (-(z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₂ : ℂ) *\n                                                                            (↑r₃ : ℂ)) -\n                                                                        z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₂ : ℂ) *\n                                                                          (↑r₄ : ℂ)) +\n                                                                    (-(z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₂ : ℂ) *\n                                                                          (↑r₅ : ℂ)) -\n                                                                      z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₂ : ℂ) * (↑r₆ : ℂ)) +\n                                                                  (-(z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₃ : ℂ) * (↑r₄ : ℂ)) -\n                                                                    z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₃ : ℂ) * (↑r₅ : ℂ)) +\n                                                                (-(z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₃ : ℂ) * (↑r₆ : ℂ)) -\n                                                                  z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₄ : ℂ) * (↑r₅ : ℂ)) +\n                                                              (-(z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₄ : ℂ) * (↑r₆ : ℂ)) -\n                                                                z ^ (3 : ℕ) * (↑r₁ : ℂ) * (↑r₅ : ℂ) * (↑r₆ : ℂ)) +\n                                                            (-(z ^ (3 : ℕ) * (↑r₂ : ℂ) * (↑r₃ : ℂ) * (↑r₄ : ℂ)) -\n                                                              z ^ (3 : ℕ) * (↑r₂ : ℂ) * (↑r₃ : ℂ) * (↑r₅ : ℂ)) +\n                                                          (-(z ^ (3 : ℕ) * (↑r₂ : ℂ) * (↑r₃ : ℂ) * (↑r₆ : ℂ)) -\n                                                            z ^ (3 : ℕ) * (↑r₂ : ℂ) * (↑r₄ : ℂ) * (↑r₅ : ℂ)) +\n                                                        (-(z ^ (3 : ℕ) * (↑r₂ : ℂ) * (↑r₄ : ℂ) * (↑r₆ : ℂ)) -\n                                                          z ^ (3 : ℕ) * (↑r₂ : ℂ) * (↑r₅ : ℂ) * (↑r₆ : ℂ)) +\n                                                      (-(z ^ (3 : ℕ) * (↑r₃ : ℂ) * (↑r₄ : ℂ) * (↑r₅ : ℂ)) -\n                                                        z ^ (3 : ℕ) * (↑r₃ : ℂ) * (↑r₄ : ℂ) * (↑r₆ : ℂ)) +\n                                                    (-(z ^ (3 : ℕ) * (↑r₃ : ℂ) * (↑r₅ : ℂ) * (↑r₆ : ℂ)) -\n                                                      z ^ (3 : ℕ) * (↑r₄ : ℂ) * (↑r₅ : ℂ) * (↑r₆ : ℂ)) +\n                                                  z ^ (4 : ℕ) * (↑r₁ : ℂ) * (↑r₂ : ℂ) +\n                                                z ^ (4 : ℕ) * (↑r₁ : ℂ) * (↑r₃ : ℂ) +\n                                              z ^ (4 : ℕ) * (↑r₁ : ℂ) * (↑r₄ : ℂ) +\n                                            z ^ (4 : ℕ) * (↑r₁ : ℂ) * (↑r₅ : ℂ) +\n                                          z ^ (4 : ℕ) * (↑r₁ : ℂ) * (↑r₆ : ℂ) +\n                                        z ^ (4 : ℕ) * (↑r₂ : ℂ) * (↑r₃ : ℂ) +\n                                      z ^ (4 : ℕ) * (↑r₂ : ℂ) * (↑r₄ : ℂ) +\n                                    z ^ (4 : ℕ) * (↑r₂ : ℂ) * (↑r₅ : ℂ) +\n                                  z ^ (4 : ℕ) * (↑r₂ : ℂ) * (↑r₆ : ℂ) +\n                                z ^ (4 : ℕ) * (↑r₃ : ℂ) * (↑r₄ : ℂ) +\n                              z ^ (4 : ℕ) * (↑r₃ : ℂ) * (↑r₅ : ℂ) +\n                            z ^ (4 : ℕ) * (↑r₃ : ℂ) * (↑r₆ : ℂ) +\n                          z ^ (4 : ℕ) * (↑r₄ : ℂ) * (↑r₅ : ℂ) +\n                        z ^ (4 : ℕ) * (↑r₄ : ℂ) * (↑r₆ : ℂ) +\n                      z ^ (4 : ℕ) * (↑r₅ : ℂ) * (↑r₆ : ℂ) +\n                    (-(z ^ (5 : ℕ) * (↑r₁ : ℂ)) - z ^ (5 : ℕ) * (↑r₂ : ℂ)) +\n                  (-(z ^ (5 : ℕ) * (↑r₃ : ℂ)) - z ^ (5 : ℕ) * (↑r₄ : ℂ)) +\n                (-(z ^ (5 : ℕ) * (↑r₅ : ℂ)) - z ^ (5 : ℕ) * (↑r₆ : ℂ)) +\n              z ^ (6 : ℕ) +\n            (↑r₁ : ℂ) * (↑r₂ : ℂ) * (↑r₃ : ℂ) * (↑r₄ : ℂ) * (↑r₅ : ℂ) * (↑r₆ : ℂ)) ∧\n      r₁ + r₂ + r₃ + r₄ + r₅ + r₆ = (10 : ℝ) ∧ r₁ * r₂ * r₃ * r₄ * r₅ * r₆ = (16 : ℝ) := by", "formal_proof": "\n  sorry"}
{"name": "amc12a_2021_p12_2", "split": "train", "header": "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\nset_option pp.instanceTypes true\nset_option pp.numericTypes true\nset_option pp.coercions.types true\nset_option pp.letVarTypes true\nset_option pp.structureInstanceTypes true\nset_option pp.instanceTypes true\nset_option pp.mvars.withType true\nset_option pp.coercions true\nset_option pp.funBinderTypes true\nset_option pp.piBinderTypes true\n\n", "informal_prefix": "", "formal_statement": "lemma amc12a_2021_p12_2\n  (a b c d : ℝ)\n  (f : ℂ → ℂ)\n  (h₀ :\n  ∀ (z : ℂ),\n    f z =\n      z ^ (6 : ℕ) - (10 : ℂ) * z ^ (5 : ℕ) + (↑a : ℂ) * z ^ (4 : ℕ) + (↑b : ℂ) * z ^ (3 : ℕ) + (↑c : ℂ) * z ^ (2 : ℕ) +\n          (↑d : ℂ) * z +\n        (16 : ℂ))\n  (h₁ :\n  ∀ (z : ℂ),\n    z ^ (6 : ℕ) - (10 : ℂ) * z ^ (5 : ℕ) + (↑a : ℂ) * z ^ (4 : ℕ) + (↑b : ℂ) * z ^ (3 : ℕ) + (↑c : ℂ) * z ^ (2 : ℕ) +\n            (↑d : ℂ) * z +\n          (16 : ℂ) =\n        (0 : ℂ) →\n      z.im = (0 : ℝ) ∧ (0 : ℝ) < z.re ∧ (↑⌊z.re⌋ : ℝ) = z.re)\n  (h_factorization :\n  ∃ (r₁ : ℝ) (r₂ : ℝ) (r₃ : ℝ) (r₄ : ℝ) (r₅ : ℝ) (r₆ : ℝ),\n    (∀ (z : ℂ),\n        z ^ (6 : ℕ) - (10 : ℂ) * z ^ (5 : ℕ) + (↑a : ℂ) * z ^ (4 : ℕ) + (↑b : ℂ) * z ^ (3 : ℕ) +\n                (↑c : ℂ) * z ^ (2 : ℕ) +\n              (↑d : ℂ) * z +\n            (16 : ℂ) =\n          (z - (↑r₁ : ℂ)) * (z - (↑r₂ : ℂ)) * (z - (↑r₃ : ℂ)) * (z - (↑r₄ : ℂ)) * (z - (↑r₅ : ℂ)) * (z - (↑r₆ : ℂ))) ∧\n      r₁ + r₂ + r₃ + r₄ + r₅ + r₆ = (10 : ℝ) ∧ r₁ * r₂ * r₃ * r₄ * r₅ * r₆ = (16 : ℝ)) :\n  ∃ (m : ℕ) (n : ℕ), m + n = (6 : ℕ) ∧ m + n * (2 : ℕ) = (10 : ℕ) ∧ (2 : ℕ) ^ n = (16 : ℕ) := by", "formal_proof": "\n  sorry"}
{"name": "amc12a_2021_p12_3", "split": "train", "header": "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\nset_option pp.instanceTypes true\nset_option pp.numericTypes true\nset_option pp.coercions.types true\nset_option pp.letVarTypes true\nset_option pp.structureInstanceTypes true\nset_option pp.instanceTypes true\nset_option pp.mvars.withType true\nset_option pp.coercions true\nset_option pp.funBinderTypes true\nset_option pp.piBinderTypes true\n\n", "informal_prefix": "", "formal_statement": "lemma amc12a_2021_p12_3\n  (a b c d : ℝ)\n  (f : ℂ → ℂ)\n  (h₀ :\n  ∀ (z : ℂ),\n    f z =\n      z ^ (6 : ℕ) - (10 : ℂ) * z ^ (5 : ℕ) + (↑a : ℂ) * z ^ (4 : ℕ) + (↑b : ℂ) * z ^ (3 : ℕ) + (↑c : ℂ) * z ^ (2 : ℕ) +\n          (↑d : ℂ) * z +\n        (16 : ℂ))\n  (h₁ :\n  ∀ (z : ℂ),\n    z ^ (6 : ℕ) - (10 : ℂ) * z ^ (5 : ℕ) + (↑a : ℂ) * z ^ (4 : ℕ) + (↑b : ℂ) * z ^ (3 : ℕ) + (↑c : ℂ) * z ^ (2 : ℕ) +\n            (↑d : ℂ) * z +\n          (16 : ℂ) =\n        (0 : ℂ) →\n      z.im = (0 : ℝ) ∧ (0 : ℝ) < z.re ∧ (↑⌊z.re⌋ : ℝ) = z.re)\n  (h_factorization :\n  ∃ (r₁ : ℝ) (r₂ : ℝ) (r₃ : ℝ) (r₄ : ℝ) (r₅ : ℝ) (r₆ : ℝ),\n    (∀ (z : ℂ),\n        z ^ (6 : ℕ) - (10 : ℂ) * z ^ (5 : ℕ) + (↑a : ℂ) * z ^ (4 : ℕ) + (↑b : ℂ) * z ^ (3 : ℕ) +\n                (↑c : ℂ) * z ^ (2 : ℕ) +\n              (↑d : ℂ) * z +\n            (16 : ℂ) =\n          (z - (↑r₁ : ℂ)) * (z - (↑r₂ : ℂ)) * (z - (↑r₃ : ℂ)) * (z - (↑r₄ : ℂ)) * (z - (↑r₅ : ℂ)) * (z - (↑r₆ : ℂ))) ∧\n      r₁ + r₂ + r₃ + r₄ + r₅ + r₆ = (10 : ℝ) ∧ r₁ * r₂ * r₃ * r₄ * r₅ * r₆ = (16 : ℝ))\n  (h_roots : ∃ (m : ℕ) (n : ℕ), m + n = (6 : ℕ) ∧ m + n * (2 : ℕ) = (10 : ℕ) ∧ (2 : ℕ) ^ n = (16 : ℕ))\n  (h_s3 : (8 : ℕ) + choose (4 : ℕ) (2 : ℕ) * (8 : ℕ) = (56 : ℕ)) :\n  b = (-88 : ℝ) := by", "formal_proof": "\n  sorry"}
